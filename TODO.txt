分散サービスは、ログの複製ができれば実現できる。
この時、単純な複製だとデータの整合性が取れないため、複製を担当するリーダーを選出する必要があることが分かった。
そのリーダー選出アルゴリズムには、Raftが適任であることが分かった。

では、Raftによってリーダー・フォロワーが定められた後、
どのようにしてログの複製を行うメソッドを書いていけばいいのか。
この部分を把握する必要がある。

これは、HTTPサーバーを書くときに最初に学んだ、
routing、controller記述、controller内でのDB操作の記述、
といった、手順・お作法を学んだ経験が活かせる。

↓

リーダー・フォロワーの選出に成功した後、何を書けば分散サービスを実現できるか。
（似た問い：サーバーソフトウェアをインストール・軌道に成功したした後、何を書けばHTTPサーバーを実現できるか。）

↓

このように、分散サービスやHTTPサーバーのようなプログラムは、
①必要なソフトウェアをインストールし、
②そのソフトウェアが求める処理を書けば、
実現ができる。

↓

ということは、今後新技術を学ぶ場合は、
①必要なソフトウェアは何があって、
②そのソフトウェアを使いたい場合は何を書けばいいか
を把握すればいい。

↓

他の問いの立て方の例：
QUICを試す場合は、なんのソフトウェアをインストールし、そのソフトウェアを使うためになんの処理を書けばいいか

↓

この問いは、車輪の再発明でも応用可能。
○○という技術の実現のためには、何のソフトウェアを使い、そのソフトウェアを使うために何の処理を書けばいいか。
そして、この問いの解決のための参照先は、OSの機能とRFC。